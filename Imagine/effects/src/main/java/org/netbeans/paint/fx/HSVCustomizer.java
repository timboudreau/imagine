/*
 * HSVCustomizer.java
 *
 * Created on October 31, 2005, 3:08 PM
 */

package org.netbeans.paint.fx;

/**
 *
 * @author  Timothy Boudreau
 */
public class HSVCustomizer extends javax.swing.JPanel {
    private final HSVEffect.HSVApplicator appl;
    /** Creates new form HSVCustomizer */
    public HSVCustomizer(HSVEffect.HSVApplicator appl) {
	this.appl = appl;
	initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        hueLabel = new javax.swing.JLabel();
        hueSlider = new javax.swing.JSlider();
        satLabel = new javax.swing.JLabel();
        satSlider = new javax.swing.JSlider();
        briLabel = new javax.swing.JLabel();
        briSlider = new javax.swing.JSlider();
        hueValue = new javax.swing.JLabel();
        satValue = new javax.swing.JLabel();
        briValue = new javax.swing.JLabel();

        hueLabel.setLabelFor(hueSlider);
        org.openide.awt.Mnemonics.setLocalizedText(hueLabel, org.openide.util.NbBundle.getMessage(HSVCustomizer.class, "LBL_Hue"));

        hueSlider.setMajorTickSpacing(20);
        hueSlider.setMaximum(50);
        hueSlider.setMinimum(-50);
        hueSlider.setMinorTickSpacing(5);
        hueSlider.setPaintLabels(true);
        hueSlider.setPaintTicks(true);
        hueSlider.setValue(0);
        hueSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderStateChanged(evt);
            }
        });

        satLabel.setLabelFor(satSlider);
        org.openide.awt.Mnemonics.setLocalizedText(satLabel, org.openide.util.NbBundle.getMessage(HSVCustomizer.class, "LBL_Saturation"));

        satSlider.setMajorTickSpacing(20);
        satSlider.setMaximum(50);
        satSlider.setMinimum(-50);
        satSlider.setMinorTickSpacing(5);
        satSlider.setPaintLabels(true);
        satSlider.setPaintTicks(true);
        satSlider.setValue(0);
        satSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderStateChanged(evt);
            }
        });

        briLabel.setLabelFor(briSlider);
        org.openide.awt.Mnemonics.setLocalizedText(briLabel, org.openide.util.NbBundle.getMessage(HSVCustomizer.class, "LBL_Brightness"));

        briSlider.setMajorTickSpacing(20);
        briSlider.setMaximum(50);
        briSlider.setMinimum(-50);
        briSlider.setMinorTickSpacing(5);
        briSlider.setPaintLabels(true);
        briSlider.setPaintTicks(true);
        briSlider.setValue(0);
        briSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderStateChanged(evt);
            }
        });

        hueValue.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        org.openide.awt.Mnemonics.setLocalizedText(hueValue, "0");

        satValue.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        org.openide.awt.Mnemonics.setLocalizedText(satValue, "0");

        briValue.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        org.openide.awt.Mnemonics.setLocalizedText(briValue, "0");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(hueLabel)
                    .add(satLabel)
                    .add(briLabel)
                    .add(satSlider, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, briSlider, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
                    .add(hueSlider, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE))
                .add(9, 9, 9)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                    .add(briValue, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(hueValue, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(satValue, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 41, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .add(hueLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(hueSlider, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(satLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(satSlider, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(briLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(briSlider, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .add(40, 40, 40)
                        .add(hueValue)
                        .add(58, 58, 58)
                        .add(satValue)
                        .add(59, 59, 59)
                        .add(briValue)))
                .addContainerGap(76, Short.MAX_VALUE))
        );
    }
    // </editor-fold>//GEN-END:initComponents

    private void sliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderStateChanged
	int hue = hueSlider.getValue();
	int sat = satSlider.getValue();
	int bri = briSlider.getValue();
	hueValue.setText (Integer.toString(hue));
	satValue.setText (Integer.toString(sat));
	briValue.setText (Integer.toString(bri));
	
	appl.setParameters ((float) hue / 100f, (float) sat / 100f, (float) bri / 100f);
	
    }//GEN-LAST:event_sliderStateChanged
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JLabel briLabel;
    public javax.swing.JSlider briSlider;
    public javax.swing.JLabel briValue;
    public javax.swing.JLabel hueLabel;
    public javax.swing.JSlider hueSlider;
    public javax.swing.JLabel hueValue;
    public javax.swing.JLabel satLabel;
    public javax.swing.JSlider satSlider;
    public javax.swing.JLabel satValue;
    // End of variables declaration//GEN-END:variables
    
}
